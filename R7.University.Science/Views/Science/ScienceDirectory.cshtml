@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<ScienceDirectoryViewModel>
@using System.Collections.Generic
@using DotNetNuke.Collections
@using DotNetNuke.Web.Mvc.Helpers
@using DotNetNuke.Web.Client.ClientResourceManagement
@using DotNetNuke.Framework
@using DotNetNuke.Common
@using DotNetNuke.Common.Utilities
@using R7.University.Components
@using R7.University.ModelExtensions
@using R7.University.ViewModels
@using R7.University.Science.ViewModels
@{
    ClientResourceManager.RegisterStyleSheet (Dnn.DnnPage, "~/DesktopModules/MVC/R7.University/R7.University/css/module.css");
}
@if (Model.IsEmpty) {
    if (Dnn.ModuleContext.IsEditable) {
        <p class="dnnFormMessage dnnFormInfo">@Dnn.LocalizeString("NothingToDisplay.Text")</p>
    }
    else {
        var containerControl = Globals.FindControlRecursiveDown (Dnn.DnnPage, "ctr" + Dnn.ModuleContext.ModuleId);
        containerControl.Visible = false;
    }
}
else {
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover u8y-science-directory" itemprop="eduNir">
            <thead>
			    @if (Dnn.ModuleContext.IsEditable) {
                    <th scope="col"></th>
                }
    		    <th scope="col">@Dnn.LocalizeString("ScienceCode.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceEduProgram.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceDirections.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceBase.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceScientists.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceStudents.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceMonographs.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceArticles.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("SciencePatents.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceCertificates.Column")</th>
    		    <th scope="col">@Dnn.LocalizeString("ScienceFinances.Column")</th>
    	    </thead>
    	    <tbody>
        	    @foreach (var eps in Model.EduProgramScienceViewModels) {
                    <tr data-title="@FormatHelper.FormatEduProgramTitle(eps.Code, eps.Title)">
				        @if (Dnn.ModuleContext.IsEditable) {
                            <td><a href="@eps.EditUrl"><img src="@UniversityIcons.Edit" /></a></td>
                        }
        			    <td itemprop="eduCode">@eps.Code</td>
        			    <td itemprop="eduName">@eps.Title</td>
    				    <td>@eps.DirectionsHtml</td>
    				    <td>@eps.BaseHtml</td>
                        <td>@eps.ScientistsHtml</td>
        				<td>@eps.StudentsHtml</td>
        				<td>@eps.MonographsHtml</td>
        				<td>@eps.ArticlesHtml</td>
        				<td>@eps.PatentsHtml</td>
        				<td>@eps.CertificatesHtml</td>
        				<td>@eps.FinancesHtml</td>
        			</tr>
                }
    		</tbody>
        </table>
	</div>
    <div id="u8y-sciencerecord-description-dialog-@Dnn.ModuleContext.ModuleId" class="modal fade" role="dialog" aria-labelledby="u8y-sciencerecord-description-dialog-title-@Dnn.ModuleContext.ModuleId">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label='@Dnn.LocalizeString("Close")'><span aria-hidden="true">&times;</span></button>
                    <h4 id="u8y-sciencerecord-description-dialog-title-@Dnn.ModuleContext.ModuleId" class="modal-title"></h4>
                </div>
                <div class="modal-body">
                </div>
            </div> 
        </div>
    </div>  
    <script type="text/javascript">
        (function($, document) {
            function getTh (td) {
                // would require column index/header index mapping
                return td.closest("table").children("thead").children("tr").children("th:nth-child(" + (td.index() + 1) + ")");
            }
	        function getModalTitleText (target) {
                return target.closest("tr").data("title");
	        }
	        function getModalBodyHtml (target) {
                return "<p>" + getTh(target.closest ("td")).text() + getValuesHtml(target) + "</p>" + getDescriptionHtml(target);
            }
            function getValuesHtml (target) {
	            var values = target.siblings("span.values");
                if (values.length > 0) {
                    return ": <strong>" + values.text() + "</strong>";
                }
	            return "";
	        }
            function getDescriptionHtml (target) {
                var description = target.siblings("span.description");
                if (description.length > 0) {
                    // TODO: Remove wrap().parent() as description HTML should contain paragraphs
                    return description.clone().removeClass("hidden").wrap("<p></p>").parent().html();
                }
                return "";
            }
	        $(document).ready(function() {
                $("#u8y-sciencerecord-description-dialog-@Dnn.ModuleContext.ModuleId").on("show.bs.modal", function (event) {
                    var target = $(event.relatedTarget);
	                $(this).find(".modal-title").text(getModalTitleText(target));
                    $(this).find(".modal-body").html(getModalBodyHtml(target));
                });
            });
        } (jQuery, document));
    </script>
}