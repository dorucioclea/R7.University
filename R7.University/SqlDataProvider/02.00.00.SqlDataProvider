-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- EduPrograms

IF NOT EXISTS (select * from sys.columns where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduPrograms]') and name = N'Generation')
    ALTER TABLE {databaseOwner}[{objectQualifier}University_EduPrograms]
        ADD [Generation] nvarchar (16) NULL,
        [AccreditedToDate] datetime NULL,
        [CreatedOnDate] datetime NULL,
        [CreatedByUserID] int NULL,
        [LastModifiedOnDate] datetime NULL,
        [LastModifiedByUserID] int NULL,
        [StartDate] datetime NULL,
        [EndDate] datetime NULL
GO

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduForms]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_EduForms] (
        [EduFormID] int IDENTITY(1,1) NOT NULL,
        [Title] nvarchar(250) NOT NULL,
        [ShortTitle] nvarchar(64) NOT NULL
        CONSTRAINT [PK_{objectQualifier}University_EduForms] PRIMARY KEY CLUSTERED (EduFormID)
    )
END
GO

-- REVIEW: Should TimeToLearn relate to EduLevelForms and LastYearOfAcceptance to EduProgramProfileForms?
IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduProgramForms]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_EduProgramForms] (
        [EduProgramID] int NOT NULL,
        [EduFormID] int NOT NULL,
        [TimeToLearn] int,
        [LastYearOfAcceptance] int
        CONSTRAINT [PK_{objectQualifier}University_EduProgramForms] PRIMARY KEY CLUSTERED (EduProgramID, EduFormID)
    )
END
GO

-- EduProgramProfiles

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduProgramProfiles]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_EduProgramProfiles] (
        [EduProgramProfileID] int IDENTITY(1,1) NOT NULL,
        [EduProgramID] int NOT NULL,
        [OldEduProgramID] int,
        [ProfileCode] nvarchar (64) NULL,
        [ProfileTitle] nvarchar (250) NULL,
        [DivisionID] int NULL,
        [CreatedOnDate] datetime NULL,
        [CreatedByUserID] int NULL,
        [LastModifiedOnDate] datetime NULL,
        [LastModifiedByUserID] int NULL,
        [StartDate] datetime NULL,
        [EndDate] datetime NULL
        CONSTRAINT [PK_{objectQualifier}University_EduProgramProfiles] PRIMARY KEY CLUSTERED (EduProgramProfileID)
        CONSTRAINT [FK_{objectQualifier}University_EduProgramProfiles_EduPrograms] FOREIGN KEY (EduProgramID) 
            REFERENCES {databaseOwner}[{objectQualifier}University_EduPrograms] (EduProgramID) ON DELETE CASCADE
    )

    INSERT INTO {databaseOwner}[{objectQualifier}University_EduProgramProfiles] SELECT 
        (SELECT TOP(1) EduProgramID FROM {databaseOwner}[{objectQualifier}University_EduPrograms] WHERE Code = EP.Code ORDER BY EduProgramID ASC) AS EduProgramID,
        EP.EduProgramID AS OldEduProgramID, EP.ProfileCode, EP.ProfileTitle, NULL, GETDATE(), 1, GETDATE(), 1, NULL, NULL
            FROM {databaseOwner}[{objectQualifier}University_EduPrograms] AS EP
END
GO

-- Documents

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduDocuments]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_EduDocuments] (
        [EduDocumentID] int IDENTITY(1,1) NOT NULL,
        [EduProgramID] int NULL,
        [EduProgramProfileID] int NULL,
        [Type] nvarchar (64),
        [Title] nvarchar (255),
        [Url] nvarchar (255)
        CONSTRAINT [PK_{objectQualifier}University_EduDocuments] PRIMARY KEY CLUSTERED (EduDocumentID)
)
END
GO

-- EmployeeDisciplines

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EmployeeDisciplines]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_EmployeeDisciplines] (
        [EmployeeID] int NOT NULL,
        [EduProgramProfileID] int NOT NULL,
        [Disciplines] nvarchar(max) NULL
        CONSTRAINT [PK_{objectQualifier}University_EmployeeDisciplines] PRIMARY KEY CLUSTERED ([EmployeeID], [EduProgramProfileID])
        CONSTRAINT [FK_{objectQualifier}University_EmployeeDisciplines_Employees] FOREIGN KEY([EmployeeID])
            REFERENCES {databaseOwner}[{objectQualifier}University_Employees]([EmployeeID]) ON DELETE CASCADE,
        CONSTRAINT [FK_{objectQualifier}University_EmployeeDisciplines_EduProgramProfiles] FOREIGN KEY([EduProgramProfileID])
            REFERENCES {databaseOwner}[{objectQualifier}University_EduProgramProfiles]([EduProgramProfileID]) ON DELETE CASCADE,
    ) 

    INSERT INTO {databaseOwner}[{objectQualifier}University_EmployeeDisciplines] SELECT EEP.EmployeeID, 
        (SELECT EPP.EduProgramProfileID FROM dbo.University_EduProgramProfiles AS EPP WHERE EPP.OldEduProgramID = EEP.EduProgramID) AS EduProgramProfileID,
        EEP.Disciplines FROM dbo.University_EmployeeEduPrograms AS EEP
END
GO

-- Cleanup

IF EXISTS (select * from sys.columns where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduPrograms]') and name = N'ProfileCode')
    ALTER TABLE {databaseOwner}[{objectQualifier}University_EduPrograms]
        DROP COLUMN ProfileCode, ProfileTitle
GO

IF EXISTS (select * from sys.columns where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EduProgramProfiles]') and name = N'OldEduProgramID')
    ALTER TABLE {databaseOwner}[{objectQualifier}University_EduProgramProfiles]
        DROP COLUMN OldEduProgramID
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_EmployeeEduPrograms]') and type in (N'U'))
    DROP TABLE {databaseOwner}[{objectQualifier}University_EmployeeEduPrograms]
GO

-- Drop views

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}vw_University_EmployeeEduPrograms]') and type in (N'V'))
    DROP VIEW {databaseOwner}[{objectQualifier}vw_University_EmployeeEduPrograms]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}vw_University_EmployeeDisciplines]') and type in (N'V'))
    DROP VIEW {databaseOwner}[{objectQualifier}vw_University_EmployeeDisciplines]
GO

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}vw_University_EduProgramProfiles]') and type in (N'V'))
    DROP VIEW {databaseOwner}[{objectQualifier}vw_University_EduProgramProfiles]
GO

-- Create views

CREATE VIEW {databaseOwner}[{objectQualifier}vw_University_EmployeeDisciplines] AS
    SELECT ED.*, EP.Code, EP.Title, EPP.ProfileCode, EPP.ProfileTitle FROM {databaseOwner}[{objectQualifier}University_EmployeeDisciplines] AS ED
        INNER JOIN {databaseOwner}[{objectQualifier}University_EduProgramProfiles] AS EPP 
            ON ED.EduProgramProfileID = EPP.EduProgramProfileID
        INNER JOIN {databaseOwner}[{objectQualifier}University_EduPrograms] AS EP 
            ON EPP.EduProgramID = EP.EduProgramID
GO

CREATE VIEW {databaseOwner}[{objectQualifier}vw_University_EduProgramProfiles] AS
    SELECT EPP.*, EP.Code, EP.Title FROM {databaseOwner}[{objectQualifier}University_EduProgramProfiles] AS EPP
        INNER JOIN {databaseOwner}[{objectQualifier}University_EduPrograms] AS EP 
            ON EPP.EduProgramID = EP.EduProgramID
GO

-- Do cleanup after upgrade to 2.0.0 version